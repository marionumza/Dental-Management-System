<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>